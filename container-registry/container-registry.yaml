apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-repo-pv
  labels:
    k8s-app: container-registry
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /tmp/repository
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-repo-pvc
  labels:
    k8s-app: container-registry
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-registry
  labels:
    app: continer-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-registry
  template:
    metadata:
      labels:
        app: container-registry
    spec:
      containers:
        - name: registry
          image: registry:2.6.2
          volumeMounts:
          - name: repo-vol
            mountPath: "/var/lib/registry"
          - name: certs-vol
            mountPath: "/certs"
            readOnly: true
          - name: auth-vol
            mountPath: "/auth"
            readOnly: true
          env:
          - name: REGISTRY_AUTH
            value: "htpasswd"
          - name: REGISTRY_AUTH_HTPASSWD_REALM
            value: "Registry Realm"
          - name: REGISTRY_AUTH_HTPASSWD_PATH
            value: "/auth/htpasswd"
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: "/certs/tls.crt"
          - name: REGISTRY_HTTP_TLS_KEY
            value: "/certs/tls.key"
      volumes:
      - name: repo-vol
        persistentVolumeClaim:
          claimName: docker-repo-pvc
      - name: certs-vol
        hostPath:
          path: /registry/certs
      - name: auth-vol
        hostPath:
          path: /registry/auth
---
apiVersion: v1
kind: Service
metadata:
  name: container-registry
  labels:
    k8s-app: container-registry
spec:
  selector:
    app: container-registry
  ports:
  - name: container-registry
    nodePort: 31113
    port: 5000
    protocol: TCP
    targetPort: 5000
  type: NodePort
